{"version":3,"file":"AbbreviatedValue.js","sourceRoot":"","sources":["../../ts/components/AbbreviatedValue.tsx"],"names":[],"mappings":";AACA,OAAO,EAAE,yBAAyB,EAAE,MAAM,4BAA4B,CAAA;AAEtE,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,EAAE,MAAM,EAAE,QAAQ,GAAG,GAAG,EAAyC,EAAE,EAAE;IACrG,MAAM,WAAW,GAAG,yBAAyB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IAC/D,MAAM,UAAU,GAAqB,EAAE,CAAA;IAEvC,KAAK,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,WAAW,EAAE;QACxC,IAAI,IAAI,KAAK,UAAU,EAAE;YACxB,MAAM,iBAAiB,GAAG,GAAI,MAAM,CAAC,KAAK,CAAE,EAAE,CAAA;YAC9C,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAA;YACpD,IAAI,OAAO,CAAC,MAAM,EAAE;gBACnB,UAAU,CAAC,IAAI,CAAC,8BAAE,0BAAS,OAAO,GAAU,EAAE,iBAAiB,IAAK,CAAC,CAAA;gBACrE,SAAQ;aACR;SACD;QACD,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;KACxB;IAED,OAAO,4BAAI,UAAU,GAAK,CAAA;AAC3B,CAAC,CAAA","sourcesContent":["import type { ComponentChild } from 'preact'\nimport { bigintToNumberFormatParts } from '../library/bigint.utils.js'\n\nexport const AbbreviatedValue = ({ amount, decimals = 18n }: { amount: bigint, decimals?: bigint }) => {\n\tconst numberParts = bigintToNumberFormatParts(amount, decimals)\n\tconst domElement: ComponentChild[] = []\n\n\tfor (const [type, value] of numberParts) {\n\t\tif (type === 'fraction') {\n\t\t\tconst significantDigits = `${ Number(value) }`\n\t\t\tconst zeroPad = value.replace(significantDigits, '')\n\t\t\tif (zeroPad.length) {\n\t\t\t\tdomElement.push(<><small>{ zeroPad }</small>{ significantDigits }</>)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t\tdomElement.push([value])\n\t}\n\n\treturn <>{ domElement }</>\n}\n"]}