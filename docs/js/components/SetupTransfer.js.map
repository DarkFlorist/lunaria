{"version":3,"file":"SetupTransfer.js","sourceRoot":"","sources":["../../ts/components/SetupTransfer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useSignalEffect } from '@preact/signals'\nimport { Contract, TransactionResponse } from 'ethers'\nimport { ComponentChildren } from 'preact'\nimport { useTransfer } from '../context/Transfer.js'\nimport { ERC20ABI } from '../library/ERC20ABI.js'\nimport { useAsyncState } from '../library/preact-utilities.js'\nimport { TransferAddressField } from './TransferAddressField.js'\nimport { TransferAmountField } from './TransferAmountField.js'\nimport { TransferRecorder } from './TransferRecorder.js'\nimport { TransferButton } from './TransferButton.js'\nimport { TransferTokenSelectField } from './TransferTokenField.js'\nimport { useEthereumProvider } from '../context/Ethereum.js'\nimport { useNotice } from '../store/notice.js'\nimport { TokenPicker } from './TokenPicker.js'\nimport { TokenAdd } from './TokenAdd.js'\nimport { TransferResult } from './TransferResult.js'\nimport { TemplateFeeder } from './TemplateFeeder.js'\n\nexport function SetupTransfer() {\n\treturn (\n\t\t<TransferForm>\n\t\t\t<div class='grid gap-3'>\n\t\t\t\t<div class='grid gap-3 md:grid-cols-2'>\n\t\t\t\t\t<TransferTokenSelectField />\n\t\t\t\t\t<TransferAmountField />\n\t\t\t\t</div>\n\t\t\t\t<TransferAddressField />\n\t\t\t\t<TransferResult />\n\t\t\t\t<TransferButton />\n\t\t\t\t<TransferRecorder />\n\t\t\t\t<TokenPicker />\n\t\t\t\t<TokenAdd />\n\t\t\t\t<TemplateFeeder />\n\t\t\t</div>\n\t\t</TransferForm>\n\t)\n}\n\nconst TransferForm = ({ children }: { children: ComponentChildren }) => {\n\tconst { browserProvider, network } = useEthereumProvider()\n\tconst { input, transaction, safeParse } = useTransfer()\n\tconst { value: transactionQuery, waitFor } = useAsyncState<TransactionResponse>()\n\tconst { notify } = useNotice()\n\n\tconst sendTransferRequest = (e: Event) => {\n\t\te.preventDefault()\n\n\t\tif (!browserProvider.value) {\n\t\t\tnotify({ message: 'No compatible web3 wallet detected.', title: 'Failed to connect' })\n\t\t\treturn\n\t\t}\n\n\t\tif (!safeParse.value.success) return\n\n\t\tconst transferInput = safeParse.value.value\n\t\tconst provider = browserProvider.value\n\n\t\twaitFor(async () => {\n\t\t\tconst signer = await provider.getSigner()\n\n\t\t\t// Ether transfer\n\t\t\tif (transferInput.token === undefined) {\n\t\t\t\treturn await signer.sendTransaction({ to: transferInput.to, value: transferInput.amount })\n\t\t\t}\n\n\t\t\t// Token transfer\n\t\t\tconst tokenMetadata = transferInput.token\n\t\t\tconst contract = new Contract(tokenMetadata.address, ERC20ABI, signer)\n\t\t\treturn await contract.transfer(transferInput.to, transferInput.amount)\n\t\t})\n\t}\n\n\tconst listenForQueryChanges = () => {\n\t\t// do not reset shared state for other instances of this hooks\n\t\tif (transactionQuery.value.state === 'inactive') return\n\t\ttransaction.value = transactionQuery.value\n\t}\n\n\tconst listenForWalletsChainChange = () => {\n\t\tif (network.value.state === 'resolved') return\n\t\t// reset token input as it may not exist on the active network\n\t\tinput.value = { ...input.peek(), token: undefined }\n\t}\n\n\tuseSignalEffect(listenForWalletsChainChange)\n\tuseSignalEffect(listenForQueryChanges)\n\treturn <form onSubmit={sendTransferRequest}>{children}</form>\n}\n"]}