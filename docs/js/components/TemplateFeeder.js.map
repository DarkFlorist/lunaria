{"version":3,"file":"TemplateFeeder.js","sourceRoot":"","sources":["../../ts/components/TemplateFeeder.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAA;AAC9D,OAAO,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAA;AACpC,OAAO,EAAE,eAAe,EAAE,MAAM,4BAA4B,CAAA;AAC5D,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAA;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,iCAAiC,CAAA;AAC9D,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAA;AAE3C,MAAM,CAAC,MAAM,cAAc,GAAG,GAAG,EAAE;IAClC,MAAM,SAAS,GAAG,YAAY,EAAE,CAAA;IAChC,MAAM,MAAM,GAAG,eAAe,EAAE,CAAA;IAChC,MAAM,MAAM,GAAG,SAAS,EAAuC,CAAA;IAC/D,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAA;IAE9B,MAAM,cAAc,GAAG,WAAW,CAAC,GAAG,EAAE;QACvC,MAAM,oBAAoB,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAA;QAC5D,IAAI,oBAAoB,KAAK,SAAS;YAAE,OAAM;QAC9C,MAAM,UAAU,GAAG,QAAQ,CAAC,oBAAoB,CAAC,CAAA;QACjD,OAAO,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,CAAA;IAClD,CAAC,CAAC,CAAA;IAEF,MAAM,aAAa,GAAG,WAAW,CAAC,GAAG,EAAE;QACtC,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAA;QAC3C,IAAI,cAAc,CAAC,KAAK,KAAK,SAAS;YAAE,OAAM;QAC9C,MAAM,uBAAuB,GAAG,cAAc,CAAC,KAAK,CAAC,eAAe,CAAA;QACpE,OAAO,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,KAAK,uBAAuB,CAAC,CAAA;IAC5E,CAAC,CAAC,CAAA;IAEF,MAAM,2BAA2B,GAAG,GAAG,EAAE;QACxC,MAAM,IAAI,GAAG,cAAc,CAAC,KAAK,CAAA;QACjC,IAAI,IAAI,KAAK,SAAS;YAAE,OAAM;QAC9B,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QACxE,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,aAAa,CAAC,KAAK,EAAE,CAAA;IAC3E,CAAC,CAAA;IAED,eAAe,CAAC,2BAA2B,CAAC,CAAA;IAE5C,OAAO,mBAAK,CAAA;AACb,CAAC,CAAA","sourcesContent":["import { useComputed, useSignalEffect } from \"@preact/signals\"\nimport { formatUnits } from \"ethers\"\nimport { useTokenManager } from \"../context/TokenManager.js\"\nimport { useTransfer } from \"../context/Transfer.js\"\nimport { useTemplates } from \"../context/TransferTemplates.js\"\nimport { useRouter } from \"./HashRouter.js\"\n\nexport const TemplateFeeder = () => {\n\tconst templates = useTemplates()\n\tconst tokens = useTokenManager()\n\tconst router = useRouter<{ template_id: string | undefined }>()\n\tconst transfer = useTransfer()\n\n\tconst activeTemplate = useComputed(() => {\n\t\tconst templateIdFromParams = router.value.params.template_id\n\t\tif (templateIdFromParams === undefined) return\n\t\tconst templateId = parseInt(templateIdFromParams)\n\t\treturn templates.cache.peek().data.at(templateId)\n\t})\n\n\tconst selectedToken = useComputed(() => {\n\t\tconst tokensCache = tokens.cache.value.data\n\t\tif (activeTemplate.value === undefined) return\n\t\tconst templateContractAddress = activeTemplate.value.contractAddress\n\t\treturn tokensCache.find(token => token.address === templateContractAddress)\n\t})\n\n\tconst feedTemplateToTransferInput = () => {\n\t\tconst tmpl = activeTemplate.value\n\t\tif (tmpl === undefined) return\n\t\tconst amount = formatUnits(tmpl.quantity, selectedToken.value?.decimals)\n\t\ttransfer.input.value = { to: tmpl.to, amount, token: selectedToken.value }\n\t}\n\n\tuseSignalEffect(feedTemplateToTransferInput)\n\n\treturn <></>\n}\n"]}