{"version":3,"file":"TemplateRecorder.js","sourceRoot":"","sources":["../../ts/components/TemplateRecorder.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Signal, useComputed, useSignal, useSignalEffect } from '@preact/signals'\nimport { toQuantity } from 'ethers'\nimport { JSX } from 'preact/jsx-runtime'\nimport { useTemplates } from '../context/TransferTemplates.js'\nimport { extractERC20TransferRequest } from '../library/ethereum.js'\nimport { serialize, TransferRequest, TransferTemplate } from '../schema.js'\nimport { useTransaction } from './TransactionProvider.js'\n\nexport const TemplateRecorder = () => {\n\tconst { response, receipt } = useTransaction()\n\tconst { add } = useTemplates()\n\tconst isSaved = useSignal(false)\n\tconst templateDraft = useSignal<TransferTemplate | undefined>(undefined)\n\n\tconst erc20TransferTemplate = useComputed(() => {\n\t\tif (receipt.value.state !== 'resolved' || receipt.value.value === null) return\n\t\tconst erc20TransferRequest = extractERC20TransferRequest(receipt.value.value)\n\t\tif (erc20TransferRequest === undefined) return\n\t\tconst parsed = TransferRequest.safeParse(erc20TransferRequest)\n\t\tconst label = templateDraft.peek()?.label\n\t\treturn parsed.success ? { ...parsed.value, label } : undefined\n\t})\n\n\tconst ethTransferTemplate = useComputed(() => {\n\t\tif (response.value.state !== 'resolved' || response.value.value === null) return\n\t\tconst { to, from, value } = response.value.value\n\t\tconst parsed = TransferRequest.safeParse({ to, from, quantity: toQuantity(value) })\n\t\treturn parsed.success ? { label: templateDraft.peek()?.label, ...parsed.value } : undefined\n\t})\n\n\tuseSignalEffect(() => {\n\t\t// Update draft with values coming from transaction\n\t\ttemplateDraft.value = erc20TransferTemplate.value || ethTransferTemplate.value\n\t})\n\n\tconst saveTemplate = () => {\n\t\tif (!templateDraft.value) return\n\t\tconst serialized = serialize(TransferTemplate, templateDraft.value)\n\t\tconst template = TransferTemplate.parse(serialized)\n\t\tadd(template)\n\t\tisSaved.value = true\n\t}\n\n\t// Activate form only after the transaction receipt is resolved\n\tif (receipt.value.state !== 'resolved') return <></>\n\n\tif (isSaved.value === true) return <TemplateAddConfirmation />\n\n\treturn <AddTemplateForm formData={templateDraft} onSubmit={saveTemplate} />\n}\n\ntype AddTemplateFormProps = {\n\tonSubmit: () => void\n\tformData: Signal<TransferTemplate | undefined>\n}\n\nconst AddTemplateForm = ({ formData, onSubmit }: AddTemplateFormProps) => {\n\tconst submitForm = (e: Event) => {\n\t\te.preventDefault()\n\t\tonSubmit()\n\t}\n\n\tconst updateLabel = (event: JSX.TargetedEvent<HTMLInputElement>) => {\n\t\tevent.preventDefault()\n\t\tconst templateData = formData.peek()\n\t\tif (!templateData) return\n\t\tformData.value = { ...templateData, label: event.currentTarget.value }\n\t}\n\n\treturn (\n\t\t<div class='my-4'>\n\t\t\t<div class='font-bold text-2xl mb-2'>Save Transfer</div>\n\t\t\t<div class='border border-dashed border-white/30 p-4'>\n\t\t\t\t<div class='flex flex-col md:flex-row-reverse items-center gap-4'>\n\t\t\t\t\t<div class='shrink w-full'>\n\t\t\t\t\t\t<p class='text-white/50 text-sm'>Prevent accidental inputs by saving this transfer so you can quickly do this again later. Add a label to this transfer and hit save to continue.</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form class='w-full' onSubmit={submitForm}>\n\t\t\t\t\t\t<div class='grid gap-2 items-center w-full'>\n\t\t\t\t\t\t\t<input class='border border-white/30 px-4 py-2 bg-transparent outline-none min-w-auto' type='text' value={formData.value?.label} onInput={updateLabel} placeholder='Add a label (optional)' />\n\t\t\t\t\t\t\t<button type='submit' class='border border-white/50 bg-white/10 px-4 py-3 outline-none focus:bg-white/20 hover:bg-white/20'>\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst TemplateAddConfirmation = () => {\n\treturn (\n\t\t<div class='my-4'>\n\t\t\t<div class='border border-dashed border-lime-400/40 bg-lime-400/5 p-4'>\n\t\t\t\t<div class='flex items-center justify-left gap-2'>\n\t\t\t\t\t<svg width='60' height='60' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n\t\t\t\t\t\t<g fill='none' fillRule='evenodd'>\n\t\t\t\t\t\t\t<path d='M0 0h24v24H0z' />\n\t\t\t\t\t\t\t<circle stroke='currentColor' strokeWidth='2' strokeLinecap='round' cx='12' cy='12' r='9' />\n\t\t\t\t\t\t\t<path d='m8.5 12.5 1.651 2.064a.5.5 0 0 0 .744.041L15.5 10' stroke='currentColor' strokeWidth='2' strokeLinecap='round' />\n\t\t\t\t\t\t</g>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class='font-bold text-lg'>Transfer Saved!</div>\n\t\t\t\t\t\t<div class='text-white/50 leading-tight'>This transfer was added to the sidebar so you can use it as a starting point for your next transfer.</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n"]}