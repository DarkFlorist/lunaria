{"version":3,"file":"TokenAdd.js","sourceRoot":"","sources":["../../ts/components/TokenAdd.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Signal, useComputed, useSignal, useSignalEffect } from '@preact/signals'\nimport { Contract } from 'ethers'\nimport { ComponentChildren, createContext } from 'preact'\nimport { useTokenManager } from '../context/TokenManager.js'\nimport { useTransfer } from '../context/Transfer.js'\nimport { useEthereumProvider } from '../context/Ethereum.js'\nimport { ERC20ABI } from '../library/ERC20ABI.js'\nimport { AsyncProperty, useAsyncState, useSignalRef } from '../library/preact-utilities.js'\nimport { ERC20Token, EthereumAddress, serialize } from '../schema.js'\nimport { useNotice } from '../store/notice.js'\nimport * as Icon from './Icon/index.js'\nimport { useContext, useRef } from 'preact/hooks'\n\nexport const TokenAdd = () => {\n\treturn (\n\t\t<AddTokenDialog>\n\t\t\t<div class='lg:w-[32rem] mx-auto'>\n\t\t\t\t<div class='text-2xl font-semibold px-4 pt-5 leading-0'>Add a token</div>\n\t\t\t\t<div class='px-4 mb-3 text-white/50'>Enter the token's contract address to retrieve details</div>\n\t\t\t\t<form method='dialog'>\n\t\t\t\t\t<div class='px-4 grid gap-y-3'>\n\t\t\t\t\t\t<TokenQueryProvider>\n\t\t\t\t\t\t\t<QueryAddressField />\n\t\t\t\t\t\t\t<QueryStatus />\n\t\t\t\t\t\t\t<TokenDataToFields />\n\t\t\t\t\t\t</TokenQueryProvider>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</AddTokenDialog>\n\t)\n}\n\ntype TokenQueryContext = {\n\taddress: Signal<string>\n\ttokenQuery: Signal<AsyncProperty<ERC20Token>>\n}\n\nconst TokenQueryContext = createContext<TokenQueryContext | undefined>(undefined)\n\nconst TokenQueryProvider = ({ children }: { children: ComponentChildren }) => {\n\tconst { browserProvider, network } = useEthereumProvider()\n\tconst { notify } = useNotice()\n\tconst { value: tokenQuery, waitFor, reset } = useAsyncState<ERC20Token>()\n\tconst address = useSignal('')\n\n\tconst addressChecksum = useComputed(() => EthereumAddress.safeParse(address.value))\n\n\tconst queryAddress = (tokenAddress: EthereumAddress) => {\n\t\tif (!browserProvider.value) {\n\t\t\tnotify({ message: 'No compatible web3 wallet detected.', title: 'Failed to connect' })\n\t\t\treturn\n\t\t}\n\n\t\tif (network.value.state !== 'resolved') {\n\t\t\tnotify({ message: 'Your wallet may not connected to the chain.', title: 'Network unavailable' })\n\t\t\treturn\n\t\t}\n\n\t\tconst activeChainId = network.value.value.chainId\n\t\tconst provider = browserProvider.value\n\n\t\twaitFor(async () => {\n\t\t\tconst contract = new Contract(tokenAddress, ERC20ABI, provider)\n\t\t\tconst namePromise = contract.name()\n\t\t\tconst symbolPromise = contract.symbol()\n\t\t\tconst decimalsPromise = contract.decimals()\n\t\t\tconst name = await namePromise\n\t\t\tconst symbol = await symbolPromise\n\t\t\tconst decimals = await decimalsPromise\n\t\t\tconst chainId = activeChainId\n\t\t\treturn { chainId, name, symbol, decimals, address: tokenAddress }\n\t\t})\n\t}\n\n\tuseSignalEffect(() => {\n\t\tif (!addressChecksum.value.success) {\n\t\t\treset()\n\t\t\treturn\n\t\t}\n\t\tqueryAddress(addressChecksum.value.value)\n\t})\n\n\treturn <TokenQueryContext.Provider value={ { address, tokenQuery } }>{ children }</TokenQueryContext.Provider>\n}\n\nconst useTokenQuery = () => {\n\tconst context = useContext(TokenQueryContext)\n\tif (context === undefined) throw new Error('useTokenQuery can only be used within children of TokenQueryProvider')\n\treturn context\n}\n\n\nconst AddTokenDialog = ({ children }: { children: ComponentChildren }) => {\n\tconst { ref, signal: dialogRef } = useSignalRef<HTMLDialogElement | null>(null)\n\tconst { cache, stage } = useTokenManager()\n\tconst { input } = useTransfer()\n\n\tconst closeDialogOnBackdropClick = (e: Event) => {\n\t\tconst isClickWithinDialog = e.type === 'click' && e.target !== dialogRef?.value\n\t\tif (isClickWithinDialog) return\n\t\tdialogRef.value?.close()\n\t}\n\n\tconst unsetStageIfClosedIntentionally = () => {\n\t\tstage.value = stage.value === 'add' ? undefined : stage.value\n\t}\n\n\tconst showOrHideDialog = () => {\n\t\tconst dialogElement = dialogRef.value\n\t\tconst isDialogOpen = stage.value === 'add'\n\t\tif (!dialogElement) return\n\t\tdialogElement.onclose = unsetStageIfClosedIntentionally\n\t\tisDialogOpen ? dialogElement.showModal() : dialogElement.close()\n\t}\n\n\tconst setClickListenerForDialog = () => {\n\t\tif (stage.value !== 'add') return\n\t\tdocument.addEventListener('click', closeDialogOnBackdropClick)\n\t\treturn () => document.removeEventListener('click', closeDialogOnBackdropClick)\n\t}\n\n\tconst handleDialogSubmit = (event: Event) => {\n\t\tif (!(event.target instanceof HTMLFormElement)) return\n\t\tconst formData = new FormData(event.target)\n\t\tconst parsedToken = ERC20Token.safeParse(Object.fromEntries(formData.entries()))\n\t\tif (parsedToken.success) {\n\t\t\tcache.value = Object.assign({}, cache.peek(), { data: cache.peek().data.concat([parsedToken.value]) })\n\t\t\tinput.value = Object.assign({}, input.peek(), { token: parsedToken.value })\n\t\t}\n\t}\n\n\tuseSignalEffect(showOrHideDialog)\n\tuseSignalEffect(setClickListenerForDialog)\n\n\treturn (\n\t\t<dialog ref={ ref } class='w-full text-white backdrop:bg-black/80 backdrop:backdrop-blur-[2px] max-w-full max-h-full md:max-h-[calc(100vh-3rem)] md:max-w-fit bg-transparent' onSubmit={ handleDialogSubmit }>\n\t\t\t{ children }\n\t\t</dialog>\n\t)\n}\n\nconst QueryAddressField = () => {\n\tconst inputRef = useRef<HTMLInputElement>(null)\n\tconst { address } = useTokenQuery()\n\n\tconst clearValue = () => {\n\t\tif (!inputRef.current) return\n\t\tinputRef.current.value = ''\n\t}\n\n\tconst validateInputAndUpdateContext = (event: Event) => {\n\t\tif (!(event.target instanceof HTMLInputElement)) return\n\t\tconst inputField = event.target\n\n\t\taddress.value = inputField.value\n\n\t\tif (inputField.value === '') {\n\t\t\tinputField.setCustomValidity('')\n\t\t\treturn\n\t\t}\n\n\t\tconst parsedAddress = EthereumAddress.safeParse(inputField.value)\n\t\tif (!parsedAddress.success) {\n\t\t\tlet errorMessage = 'Requires a valid ERC20 contract address'\n\t\t\tif (parsedAddress.message === 'Invalid address checksum.') { errorMessage = parsedAddress.message }\n\t\t\tevent.target.setCustomValidity(errorMessage)\n\t\t\tevent.target.reportValidity()\n\t\t\treturn\n\t\t}\n\n\t\tevent.target.setCustomValidity('')\n\t}\n\n\treturn (\n\t\t<fieldset class='px-4 py-3 relative grid gap-2 grid-cols-1 grid-flow-col-dense items-center border border-white/50 focus-within:border-white disabled:bg-white/10 disabled:border-white/30 has-[:not(:placeholder-shown):invalid]:border-red-400'>\n\t\t\t<label class='absolute top-2 left-4 text-sm text-white/50 capitalize'>contract address</label>\n\t\t\t<input ref={ inputRef } type='text' onInput={ validateInputAndUpdateContext } required placeholder='0x0123...' class='peer outline-none pt-4 bg-transparent text-ellipsis disabled:text-white/30 placeholder:text-white/20 [&:not(:placeholder-shown)]:invalid:text-red-400' />\n\t\t\t<ClearButton onClick={ clearValue } />\n\t\t</fieldset>\n\t)\n}\n\nconst QueryStatus = () => {\n\tconst { tokenQuery } = useTokenQuery()\n\n\tswitch (tokenQuery.value.state) {\n\t\tcase 'inactive':\n\t\t\treturn <></>\n\t\tcase 'pending':\n\t\t\treturn (\n\t\t\t\t<div class='px-4 py-3 grid grid-cols-[min-content,1fr] gap-x-2 items-center'>\n\t\t\t\t\t<Icon.Spinner />\n\t\t\t\t\t<span>Retrieving token information from the network...</span>\n\t\t\t\t</div>\n\t\t\t)\n\t\tcase 'rejected':\n\t\t\treturn (\n\t\t\t\t<div class='px-4 py-3 border border-dashed border-white/30 grid grid-cols-[min-content,1fr] gap-x-3 items-center'>\n\t\t\t\t\t<div class='text-3xl text-white/50'>\n\t\t\t\t\t\t<EmptyIcon />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class='leading-tight'>No token contract matches the provided address</div>\n\t\t\t\t\t\t<div class='text-sm text-white/50'>Make sure the address and network is correctly set in your connected wallet.</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\tcase 'resolved':\n\t\t\t// queried token will have included a checksum address\n\t\t\tconst fetchedToken = tokenQuery.value.value\n\n\t\t\treturn (\n\t\t\t\t<div class='px-4 py-3 border border-dashed border-white/30 grid grid-cols-1 gap-y-2'>\n\t\t\t\t\t<div class='text-white/50 text-sm'>Found a matching address</div>\n\t\t\t\t\t<div class='grid grid-cols-1 gap-y-1'>\n\t\t\t\t\t\t<div><span class='font-bold'>{ fetchedToken.name }</span> <span class='text-white/50'>({ fetchedToken.symbol })</span></div>\n\t\t\t\t\t\t<pre class='px-3 py-2 border border-white/10 font-mono bg-white/10 text-white/80 text-sm'>{ fetchedToken.address }</pre>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nconst TokenDataToFields = () => {\n\tconst { cache } = useTokenManager()\n\tconst { tokenQuery } = useTokenQuery()\n\n\tif (tokenQuery.value.state !== 'resolved') return <></>\n\n\tconst token = serialize(ERC20Token, tokenQuery.value.value)\n\tconst tokenExistsInCache = useComputed(() => cache.value.data.some(t => t.address === token.address))\n\n\treturn (\n\t\t<>\n\t\t\t{ Object.entries(token).map(([key, value]) => <input type='hidden' name={ key } value={ value } />)}\n\t\t\t<button type='submit' class='px-4 py-3 border border-white/50 hover:bg-white/10 hover:border-white text-center outline-none flex gap-x-1 items-center justify-center'><PlusIcon />{ tokenExistsInCache.value ? '' : 'Save and ' }Use</button>\n\t\t</>\n\t)\n}\n\nconst ClearButton = ({ onClick }: { onClick: () => void }) => {\n\treturn (\n\t\t<button type='button' onClick={ onClick } class='outline-none w-8 h-8 flex items-center justify-center border border-white/50 text-white/50 peer-placeholder-shown:hidden peer-disabled:hidden focus:text-white focus:border-white hover:text-white hover:border-white text-xs'>\n\t\t\t<Icon.Xmark />\n\t\t</button>\n\t)\n}\n\nconst PlusIcon = () => (\n\t<svg width='1em' height='1em' viewBox='0 0 24 24' data-name='Line Color' xmlns='http://www.w3.org/2000/svg'>\n\t\t<path d='M5 12h14m-7-7v14' style='fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:2' />\n\t</svg>\n)\n\nconst EmptyIcon = () => (\n\t<svg width='1em' height='1em' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'>\n\t\t<circle cx='12' cy='12' r='10' />\n\t\t<path d='m4.93 4.93 14.14 14.14' />\n\t</svg>\n)\n"]}