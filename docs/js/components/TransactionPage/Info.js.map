{"version":3,"file":"Info.js","sourceRoot":"","sources":["../../../ts/components/TransactionPage/Info.tsx"],"names":[],"mappings":";AACA,OAAO,EAAE,uBAAuB,EAAE,MAAM,4BAA4B,CAAA;AACpE,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAA;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAA;AAC7C,OAAO,KAAK,IAAI,MAAM,kBAAkB,CAAA;AAWxC,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,KAAgB,EAAE,EAAE;IACxC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,EAAE,EAAE,MAAM,GAAG,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,KAAK,CAAA;IAEzE,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,mBAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA;IAExD,OAAO,CACN,eAAK,KAAK,EAAE,uBAAuB,CAAC,kEAAkE,EAAE,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,2BAA2B,CAAC,aAClL,KAAC,IAAI,KAAG,EACR,0BACC,cAAK,KAAK,EAAC,uBAAuB,YAAE,KAAK,GAAO,EAChD,cAAK,KAAK,EAAC,iDAAiD,YAAE,GAAG,MAAM,GAAG,KAAK,GAAG,MAAM,EAAE,GAAO,IAC5F,EACL,SAAS,CAAC,CAAC,CAAC,KAAC,UAAU,IAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,MAAM,GAAG,CAAC,CAAC,CAAC,mBAAK,IACzD,CACN,CAAA;AACF,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,WAAW,GAAG,GAAG,EAAE;IAC/B,OAAO,CACN,eAAK,KAAK,EAAC,+CAA+C,aACzD,KAAC,SAAS,IAAC,KAAK,EAAC,SAAS,EAAC,iBAAiB,EAAE,CAAC,GAAI,EACnD,KAAC,SAAS,IAAC,iBAAiB,EAAE,EAAE,GAAI,IAC/B,CACN,CAAA;AACF,CAAC,CAAA;AAOD,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,KAAgB,EAAE,EAAE;IAC7C,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,KAAK,CAAA;IACtC,OAAO,CACN,eAAK,KAAK,EAAC,iFAAiF,aAC3F,0BACC,cAAK,KAAK,EAAC,iDAAiD,YAAE,WAAW,GAAO,EAChF,cAAK,KAAK,EAAC,uBAAuB,0DAAgD,IAC7E,EACN,cAAK,KAAK,EAAE,OAAO,YAClB,KAAC,IAAI,CAAC,IAAI,KAAG,GACR,IACD,CACN,CAAA;AACF,CAAC,CAAA","sourcesContent":["import { JSX } from 'preact/jsx-runtime'\nimport { removeNonStringsAndTrim } from '../../library/utilities.js'\nimport { AsyncText } from '../AsyncText.js'\nimport { CopyButton } from '../CopyButton.js'\nimport * as Icon from '../Icon/index.js'\n\nexport type InfoProps = {\n\tlabel: string\n\tvalue: string\n\tprefix?: string\n\tsuffix?: string\n\tallowCopy?: boolean\n\ticon?: () => JSX.Element\n}\n\nexport const Info = (props: InfoProps) => {\n\tconst { label, value, prefix = '', suffix = '', allowCopy, icon } = props\n\n\tconst Icon = () => (icon === undefined ? <></> : icon())\n\n\treturn (\n\t\t<div class={removeNonStringsAndTrim('grid gap-4 items-center px-4 py-2 border border-white/20 min-w-0', icon === undefined ? ' grid-cols-[1fr,auto]' : 'grid-cols-[auto,1fr,auto]')}>\n\t\t\t<Icon />\n\t\t\t<div>\n\t\t\t\t<div class='text-sm text-white/50'>{label}</div>\n\t\t\t\t<div class='overflow-hidden text-ellipsis whitespace-nowrap'>{`${prefix}${value}${suffix}`}</div>\n\t\t\t</div>\n\t\t\t{allowCopy ? <CopyButton value={value} label='Copy' /> : <></>}\n\t\t</div>\n\t)\n}\n\nexport const InfoPending = () => {\n\treturn (\n\t\t<div class='grid px-4 py-2 border border-white/20 min-w-0'>\n\t\t\t<AsyncText class='text-sm' placeholderLength={8} />\n\t\t\t<AsyncText placeholderLength={40} />\n\t\t</div>\n\t)\n}\n\ntype InfoError = {\n\tdisplayText: string\n\tmessage: string\n}\n\nexport const InfoError = (props: InfoError) => {\n\tconst { displayText, message } = props\n\treturn (\n\t\t<div class='grid grid-cols-[1fr,auto] items-center px-4 py-2 border border-white/20 min-w-0'>\n\t\t\t<div>\n\t\t\t\t<div class='overflow-hidden text-ellipsis whitespace-nowrap'>{displayText}</div>\n\t\t\t\t<div class='text-sm text-white/50'>Hover over the icon for more information.</div>\n\t\t\t</div>\n\t\t\t<div title={message}>\n\t\t\t\t<Icon.Info />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n"]}