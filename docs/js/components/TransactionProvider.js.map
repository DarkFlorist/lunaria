{"version":3,"file":"TransactionProvider.js","sourceRoot":"","sources":["../../ts/components/TransactionProvider.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAqB,aAAa,EAAE,MAAM,QAAQ,CAAA;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAA;AACzC,OAAO,EAAU,SAAS,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAA;AAEpE,OAAO,EAAE,mBAAmB,EAAE,MAAM,wBAAwB,CAAA;AAC5D,OAAO,EAAiB,aAAa,EAAE,MAAM,gCAAgC,CAAA;AAQ7E,MAAM,kBAAkB,GAAG,aAAa,CAAiC,SAAS,CAAC,CAAA;AAEnF,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,EAAE,QAAQ,EAAmC,EAAE,EAAE;IACpF,MAAM,EAAE,eAAe,EAAE,GAAG,mBAAmB,EAAE,CAAA;IACjD,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,eAAe,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,aAAa,EAA8B,CAAA;IACvH,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,aAAa,EAA6B,CAAA;IACnH,MAAM,eAAe,GAAG,SAAS,CAA2B,SAAS,CAAC,CAAA;IAEtE,MAAM,sBAAsB,GAAG,CAAC,eAAuB,EAAE,EAAE;QAC1D,IAAI,CAAC,eAAe,CAAC,KAAK;YAAE,OAAM;QAClC,MAAM,QAAQ,GAAG,eAAe,CAAC,KAAK,CAAA;QACtC,eAAe,CAAC,KAAK,IAAI,EAAE;YAC1B,OAAO,MAAM,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAA;QACtD,CAAC,CAAC,CAAA;IACH,CAAC,CAAA;IAED,MAAM,qBAAqB,GAAG,CAAC,UAA+B,EAAE,EAAE;QACjE,cAAc,CAAC,KAAK,IAAI,EAAE;YACzB,OAAO,MAAM,UAAU,CAAC,IAAI,EAAE,CAAA;QAC/B,CAAC,CAAC,CAAA;IACH,CAAC,CAAA;IAED,wCAAwC;IACxC,eAAe,CAAC,GAAG,EAAE;QACpB,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,KAAK,UAAU;YAAE,OAAM;QAC/C,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI;YAAE,OAAM;QACzC,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IAC5C,CAAC,CAAC,CAAA;IAEF,eAAe,CAAC,GAAG,EAAE;QACpB,IAAI,eAAe,CAAC,KAAK,KAAK,SAAS;YAAE,OAAM;QAC/C,aAAa,EAAE,CAAA;QACf,YAAY,EAAE,CAAA;QACd,sBAAsB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAA;IAC9C,CAAC,CAAC,CAAA;IAEF,OAAO,CACN,KAAC,kBAAkB,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,eAAe,EAAE,QAAQ,EAAE,OAAO,EAAE,YACxE,QAAQ,GACoB,CAC9B,CAAA;AACF,CAAC,CAAA;AAED,MAAM,UAAU,cAAc;IAC7B,MAAM,OAAO,GAAG,UAAU,CAAC,kBAAkB,CAAC,CAAA;IAC9C,IAAI,OAAO,KAAK,SAAS;QAAE,MAAM,CAAC,2DAA2D,CAAC,CAAA;IAC9F,OAAO,OAAO,CAAA;AACf,CAAC","sourcesContent":["import { ComponentChildren, createContext } from 'preact'\nimport { useContext } from 'preact/hooks'\nimport { Signal, useSignal, useSignalEffect } from '@preact/signals'\nimport { TransactionReceipt, TransactionResponse } from 'ethers'\nimport { useEthereumProvider } from '../context/Ethereum.js'\nimport { AsyncProperty, useAsyncState } from '../library/preact-utilities.js'\n\ntype TransactionContext = {\n\ttransactionHash: Signal<string | undefined>\n\tresponse: Signal<AsyncProperty<TransactionResponse | null>>\n\treceipt: Signal<AsyncProperty<TransactionReceipt | null>>\n}\n\nconst TransactionContext = createContext<TransactionContext | undefined>(undefined)\n\nexport const TransactionProvider = ({ children }: { children: ComponentChildren }) => {\n\tconst { browserProvider } = useEthereumProvider()\n\tconst { value: response, waitFor: waitForResponse, reset: resetResponse } = useAsyncState<TransactionResponse | null>()\n\tconst { value: receipt, waitFor: waitForReceipt, reset: resetReceipt } = useAsyncState<TransactionReceipt | null>()\n\tconst transactionHash = useSignal<`0x{string}` | undefined>(undefined)\n\n\tconst getTransactionResponse = (transactionHash: string) => {\n\t\tif (!browserProvider.value) return\n\t\tconst provider = browserProvider.value\n\t\twaitForResponse(async () => {\n\t\t\treturn await provider.getTransaction(transactionHash)\n\t\t})\n\t}\n\n\tconst getTransactionReceipt = (txResponse: TransactionResponse) => {\n\t\twaitForReceipt(async () => {\n\t\t\treturn await txResponse.wait()\n\t\t})\n\t}\n\n\t// automatically get transaction receipt\n\tuseSignalEffect(() => {\n\t\tif (response.value.state !== 'resolved') return\n\t\tif (response.value.value === null) return\n\t\tgetTransactionReceipt(response.value.value)\n\t})\n\n\tuseSignalEffect(() => {\n\t\tif (transactionHash.value === undefined) return\n\t\tresetResponse()\n\t\tresetReceipt()\n\t\tgetTransactionResponse(transactionHash.value)\n\t})\n\n\treturn (\n\t\t<TransactionContext.Provider value={{ transactionHash, response, receipt }}>\n\t\t\t{children}\n\t\t</TransactionContext.Provider>\n\t)\n}\n\nexport function useTransaction() {\n\tconst context = useContext(TransactionContext)\n\tif (context === undefined) throw ('use useTransaction within children of TransactionProvider')\n\treturn context\n}\n"]}