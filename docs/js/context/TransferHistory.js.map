{"version":3,"file":"TransferHistory.js","sourceRoot":"","sources":["../../ts/context/TransferHistory.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAU,SAAS,EAAE,MAAM,iBAAiB,CAAA;AACnD,OAAO,KAAK,QAAQ,MAAM,UAAU,CAAA;AACpC,OAAO,EAAqB,aAAa,EAAE,MAAM,QAAQ,CAAA;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAA;AACzC,OAAO,EAAE,0BAA0B,EAAE,MAAM,yBAAyB,CAAA;AACpE,OAAO,EAAE,mBAAmB,EAAE,MAAM,iCAAiC,CAAA;AACrE,OAAO,EAAE,iBAAiB,EAAE,cAAc,EAAE,MAAM,cAAc,CAAA;AAEhE,MAAM,CAAC,MAAM,0BAA0B,GAAG,QAAQ,CAAC,KAAK,CACvD,QAAQ,CAAC,MAAM,CAAC;IACf,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC;IACpC,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC;CAClC,CAAC,CACF,CAAA;AAID,MAAM,sBAAsB,GAAG,aAAa,CAAsC,SAAS,CAAC,CAAA;AAE5F,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,EAAE,QAAQ,EAAmC,EAAE,EAAE;IACxF,MAAM,SAAS,GAAG,SAAS,CAAkB,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAA;IAE5E,mBAAmB,CAAC,0BAA0B,EAAE,SAAS,EAAE,iBAAiB,CAAC,0BAA0B,CAAC,CAAC,CAAA;IAEzG,OAAO,KAAC,sBAAsB,CAAC,QAAQ,IAAC,KAAK,EAAE,SAAS,YAAG,QAAQ,GAAmC,CAAA;AACvG,CAAC,CAAA;AAED,MAAM,UAAU,kBAAkB;IACjC,MAAM,OAAO,GAAG,UAAU,CAAC,sBAAsB,CAAC,CAAA;IAClD,IAAI,OAAO,KAAK,SAAS;QAAE,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAA;IAC5H,OAAO,OAAO,CAAA;AACf,CAAC","sourcesContent":["import { Signal, useSignal } from '@preact/signals'\nimport * as funtypes from 'funtypes'\nimport { ComponentChildren, createContext } from 'preact'\nimport { useContext } from 'preact/hooks'\nimport { RECENT_TRANSFERS_CACHE_KEY } from '../library/constants.js'\nimport { persistSignalEffect } from '../library/persistent-signal.js'\nimport { createCacheParser, TransferSchema } from '../schema.js'\n\nexport const TransferHistoryCacheSchema = funtypes.Union(\n\tfuntypes.Object({\n\t\tdata: funtypes.Array(TransferSchema),\n\t\tversion: funtypes.Literal('1.0.0'),\n\t}),\n)\n\nexport type TransferHistory = funtypes.Static<typeof TransferHistoryCacheSchema>\n\nconst TransferHistoryContext = createContext<Signal<TransferHistory> | undefined>(undefined)\n\nexport const TransferHistoryProvider = ({ children }: { children: ComponentChildren }) => {\n\tconst transfers = useSignal<TransferHistory>({ data: [], version: '1.0.0' })\n\n\tpersistSignalEffect(RECENT_TRANSFERS_CACHE_KEY, transfers, createCacheParser(TransferHistoryCacheSchema))\n\n\treturn <TransferHistoryContext.Provider value={transfers}>{children}</TransferHistoryContext.Provider>\n}\n\nexport function useTransferHistory() {\n\tconst context = useContext(TransferHistoryContext)\n\tif (context === undefined) throw new Error('useTransferHistory can only be used within children of TransferHistoryProvider')\n\treturn context\n}\n"]}