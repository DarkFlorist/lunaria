{"version":3,"file":"Wallet.js","sourceRoot":"","sources":["../../ts/context/Wallet.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Signal, useComputed, useSignal, useSignalEffect } from '@preact/signals'\nimport { Contract, makeError } from 'ethers'\nimport { ComponentChildren, createContext } from 'preact'\nimport { useContext } from 'preact/hooks'\nimport { DEFAULT_TOKENS, SETTINGS_CACHE_KEY } from '../library/constants.js'\nimport { ERC20ABI } from '../library/ERC20ABI.js'\nimport { isEthereumProvider, withEip1193Provider } from '../library/ethereum.js'\nimport { persistSignalEffect } from '../library/persistent-signal.js'\nimport { AsyncProperty, useAsyncState } from '../library/preact-utilities.js'\nimport { SettingsCacheSchema, createCacheParser, SettingsCache, EthereumAddress, HexString, AccountSettings, ERC20Token } from '../schema.js'\nimport { useEthereumProvider } from './Ethereum.js'\n\nexport type WalletContext = {\n\tsettings: Signal<SettingsCache>\n\taccount: Signal<AsyncProperty<EthereumAddress>>\n}\n\nexport const WalletContext = createContext<WalletContext | undefined>(undefined)\nexport const WalletProvider = ({ children }: { children: ComponentChildren }) => {\n\tconst settings = useSignal<SettingsCache>({ data: [], version: '1.0.0' })\n\tconst account = useSignal<AsyncProperty<EthereumAddress>>({ state: 'inactive' })\n\n\tpersistSignalEffect(SETTINGS_CACHE_KEY, settings, createCacheParser(SettingsCacheSchema))\n\n\treturn (\n\t\t<WalletContext.Provider value={{ account, settings }}>\n\t\t\t<AccountUpdater />\n\t\t\t<SettingsUpdater />\n\t\t\t{children}\n\t\t</WalletContext.Provider>\n\t)\n}\n\nexport function useWallet() {\n\tconst context = useContext(WalletContext)\n\tif (!context) throw new Error('useWallet can only be used within children of WalletProvider')\n\n\tconst { browserProvider } = useEthereumProvider()\n\tconst { value: query, waitFor } = useAsyncState<EthereumAddress>()\n\n\tconst connect = () => {\n\t\twaitFor(async () => {\n\t\t\tif (!browserProvider.value) {\n\t\t\t\tthrow makeError('No compatible web3 wallet detected.', 'UNKNOWN_ERROR', { error: { code: 4900 } })\n\t\t\t}\n\t\t\tconst signer = await browserProvider.value.getSigner()\n\t\t\treturn EthereumAddress.parse(signer.address)\n\t\t})\n\t}\n\n\tconst listenForQueryChanges = () => {\n\t\t// do not reset shared state for other instances of this hooks\n\t\tif (query.value.state === 'inactive') return\n\t\tcontext.account.value = query.value\n\t}\n\n\tuseSignalEffect(listenForQueryChanges)\n\treturn { ...context, connect }\n}\n\nconst AccountUpdater = () => {\n\tconst { account } = useWallet()\n\tconst addAccountChangeListener = () => {\n\t\tif (!withEip1193Provider(window)) return\n\t\tif (!isEthereumProvider(window.ethereum)) return\n\t\twindow.ethereum.on('accountsChanged', updateAsyncAccount)\n\t}\n\tconst updateAsyncAccount = ([newAddress]: (string | undefined)[]) => {\n\t\taccount.value = newAddress ? { state: 'resolved', value: EthereumAddress.parse(newAddress) } : { state: 'inactive' }\n\t}\n\tconst listenToAccountChange = () => {\n\t\tif (account.value.state !== 'resolved') return\n\t\taddAccountChangeListener()\n\t}\n\n\tuseSignalEffect(listenToAccountChange)\n\n\treturn <></>\n}\n\nconst SettingsUpdater = () => {\n\tconst { account, settings } = useWallet()\n\tconst initializeSettings = (accountAddress: HexString) => {\n\t\tconst accountSettingsExist = settings.value.data.some(data => data.address === accountAddress)\n\t\tif (accountSettingsExist) return\n\t\tconst accountSettings: AccountSettings = {\n\t\t\taddress: accountAddress,\n\t\t\tholdings: DEFAULT_TOKENS.map(token => token.address)\n\t\t}\n\t\tsettings.value = Object.assign({}, settings.peek(), { data: settings.peek().data.concat([accountSettings]) })\n\t}\n\n\tuseSignalEffect(() => {\n\t\tif (account.value.state !== 'resolved') return\n\t\tinitializeSettings(account.value.value)\n\t})\n\n\treturn <></>\n}\n\nexport function useBalance() {\n\tconst { browserProvider, blockNumber } = useEthereumProvider()\n\tconst { account } = useWallet()\n\tconst { value: balance, waitFor } = useAsyncState<bigint>()\n\tconst token = useSignal<ERC20Token | undefined>(undefined)\n\n\tconst resolvedAccount = useComputed(() => account.value.state === 'resolved' ? account.value.value : undefined)\n\n\tconst queryAssetBalance = (accountAddress: EthereumAddress, token?: ERC20Token) => {\n\t\tif (!browserProvider.value || !blockNumber.value) return\n\t\tconst provider = browserProvider.value\n\t\tif (!token) {\n\t\t\twaitFor(async () => await provider.getBalance(accountAddress, blockNumber.value))\n\t\t} else {\n\t\t\tconst contract = new Contract(token.address, ERC20ABI, provider)\n\t\t\twaitFor(async () => await contract.balanceOf(accountAddress))\n\t\t}\n\t}\n\n\tconst fetchLatestBalance = () => {\n\t\tif (!resolvedAccount.value) return\n\t\tqueryAssetBalance(resolvedAccount.value, token.value)\n\t}\n\n\tuseSignalEffect(fetchLatestBalance)\n\n\treturn { balance, token }\n}\n\n"]}