{"version":3,"file":"exceptions.js","sourceRoot":"","sources":["../../ts/library/exceptions.ts"],"names":[],"mappings":"AAQA,MAAM,OAAO,oBAAqB,SAAQ,KAAK;IAK9C,YAAY,IAAY,EAAE,OAAe,EAAE,IAAU;QACpD,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,IAAI,CAAC,IAAI,GAAG,sBAAsB,CAAA;QAClC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAEhB,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAA;IAC5D,CAAC;CACD;AAED,MAAM,UAAU,sBAAsB,CAAC,KAAc;IACpD,OAAO,KAAK,YAAY,MAAM,IAAI,OAAO,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,YAAY,MAAM,IAAI,MAAM,IAAI,KAAK,CAAC,KAAK,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,QAAQ,IAAI,SAAS,IAAI,KAAK,CAAC,KAAK,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,OAAO,KAAK,QAAQ,CAAA;AAC5N,CAAC","sourcesContent":["export type EthereumJsonRpcErrorSignature = {\n\terror: {\n\t\tcode: number\n\t\tmessage: string\n\t\tdata?: any\n\t}\n}\n\nexport class EthereumJsonRpcError extends Error {\n\tpublic code: number\n\tpublic message: string\n\tpublic data?: any\n\n\tconstructor(code: number, message: string, data?: any) {\n\t\tsuper(message)\n\t\tthis.name = 'EthereumJsonRpcError'\n\t\tthis.code = code\n\t\tthis.message = message\n\t\tthis.data = data\n\n\t\tObject.setPrototypeOf(this, EthereumJsonRpcError.prototype)\n\t}\n}\n\nexport function isEthereumJsonRpcError(error: unknown): error is EthereumJsonRpcErrorSignature {\n\treturn error instanceof Object && 'error' in error && error.error instanceof Object && 'code' in error.error && typeof error.error.code === 'number' && 'message' in error.error && typeof error.error.message === 'string'\n}\n"]}