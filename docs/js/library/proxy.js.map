{"version":3,"file":"proxy.js","sourceRoot":"","sources":["../../ts/library/proxy.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,mBAAmB,CAAmB,QAAoB,EAAE,MAAS;IACpF,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE;QACzB,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;QACxB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YAAE,SAAQ;QACpC,MAAM,CAAC,GAAG,CAAC,GAAG,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;KACjD;IACD,OAAO,IAAI,KAAK,CAAI,MAAM,EAAE,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAA;AAC1D,CAAC;AAED,SAAS,kBAAkB,CAAmB,QAAoB;IACjE,OAAO;QACN,GAAG,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAW,EAAE;YAC5C,CAAC;YAAC,MAAc,CAAC,QAAQ,CAAC,GAAG,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAA;YAC9G,QAAQ,EAAE,CAAA;YACV,OAAO,IAAI,CAAA;QACZ,CAAC;KACD,CAAA;AACF,CAAC;AAED,SAAS,eAAe,CAAC,KAAU;IAClC,IAAI,KAAK,KAAK,IAAI;QAAE,OAAO,KAAK,CAAA;IAChC,IAAI,KAAK,YAAY,IAAI;QAAE,OAAO,KAAK,CAAA;IACvC,iJAAiJ;IACjJ,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAA;AACjC,CAAC","sourcesContent":["export function createOnChangeProxy<T extends object>(onChange: () => void, target: T): T {\n\tfor (const key in target) {\n\t\tconst item = target[key]\n\t\tif (!isMutableObject(item)) continue\n\t\ttarget[key] = createOnChangeProxy(onChange, item)\n\t}\n\treturn new Proxy<T>(target, createProxyHandler(onChange))\n}\n\nfunction createProxyHandler<T extends object>(onChange: () => void): ProxyHandler<T> {\n\treturn {\n\t\tset: (object, property, newValue): boolean => {\n\t\t\t;(object as any)[property] = typeof newValue === 'object' ? createOnChangeProxy(onChange, newValue) : newValue\n\t\t\tonChange()\n\t\t\treturn true\n\t\t},\n\t}\n}\n\nfunction isMutableObject(maybe: any): maybe is object {\n\tif (maybe === null) return false\n\tif (maybe instanceof Date) return false\n\t// TODO: filter out any other special cases we can find, where something identifies as an `object` but is effectively immutable for our use cases\n\treturn typeof maybe === 'object'\n}\n"]}