{"version":3,"file":"notice.js","sourceRoot":"","sources":["../../ts/store/notice.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAA;AAQlD,MAAM,OAAO,GAAG,MAAM,CAAW,EAAE,CAAC,CAAA;AACpC,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;AAEvD,MAAM,UAAU,SAAS;IACxB,MAAM,MAAM,GAAG,CAAC,MAA0B,EAAE,EAAE;QAC7C,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,MAAM,EAAE,EAAE,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,CAAA;IACrE,CAAC,CAAA;IAED,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,CAAA;AAC3B,CAAC","sourcesContent":["import { computed, signal } from '@preact/signals'\n\nexport type Notice = {\n\tid: number\n\ttitle: string\n\tmessage: string\n}\n\nconst notices = signal<Notice[]>([])\nconst nextId = computed(() => notices.value.length + 1)\n\nexport function useNotice() {\n\tconst notify = (notice: Omit<Notice, 'id'>) => {\n\t\tnotices.value = [{ ...notice, id: nextId.value }, ...notices.peek()]\n\t}\n\n\treturn { notices, notify }\n}\n"]}